-- RPC to fetch passes and activities with stock for an event\nDROP FUNCTION IF EXISTS get_event_passes_activities_stock(uuid);
\n\nCREATE OR REPLACE FUNCTION get_event_passes_activities_stock(event_uuid uuid)\nRETURNS json AS $$\n  SELECT json_build_object(\n    'passes', COALESCE((\n      SELECT json_agg(json_build_object(\n        'id', p.id,\n        'name', p.name,\n        'price', p.price,\n        'description', p.description,\n        'initial_stock', p.initial_stock,\n        'remaining_stock', get_pass_remaining_stock(p.id)\n      ))\n      FROM passes p\n      WHERE p.event_id = event_uuid\n    ), '[]'::json),\n    'event_activities', COALESCE((\n      SELECT json_agg(json_build_object(\n        'id', ea.id,\n        'activity_id', ea.activity_id,\n        'stock_limit', ea.stock_limit,\n        'requires_time_slot', ea.requires_time_slot,\n        'activity', json_build_object(\n          'id', a.id,\n          'name', a.name,\n          'description', a.description,\n          'icon', a.icon\n        ),\n        'remaining_stock', get_event_activity_remaining_stock(ea.id)\n      ))\n      FROM event_activities ea\n      JOIN activities a ON a.id = ea.activity_id\n      WHERE ea.event_id = event_uuid\n    ), '[]'::json)\n  );
\n$$ LANGUAGE sql SECURITY DEFINER;
\n;
