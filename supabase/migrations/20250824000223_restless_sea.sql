\n\n-- Create pass_activities table\nCREATE TABLE IF NOT EXISTS pass_activities (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  pass_id uuid REFERENCES passes(id) ON DELETE CASCADE,\n  event_activity_id uuid REFERENCES event_activities(id) ON DELETE CASCADE,\n  created_at timestamptz DEFAULT now(),\n  UNIQUE(pass_id, event_activity_id)\n);
\n\n-- Enable RLS\nALTER TABLE pass_activities ENABLE ROW LEVEL SECURITY;
\n\n-- Add policies\nCREATE POLICY "Admins can manage pass activities"\n  ON pass_activities\n  FOR ALL\n  TO authenticated\n  USING (EXISTS (\n    SELECT 1 FROM users \n    WHERE users.id = auth.uid() AND users.role = 'admin'\n  ));
\n\nCREATE POLICY "Anyone can view pass activities for published events"\n  ON pass_activities\n  FOR SELECT\n  TO public\n  USING (EXISTS (\n    SELECT 1 FROM passes p\n    JOIN events e ON e.id = p.event_id\n    WHERE p.id = pass_activities.pass_id AND e.status = 'published'\n  ));
\n\n-- Remove old columns from passes table if they exist\nDO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'passes' AND column_name = 'poney_max_bookings') THEN\n    ALTER TABLE passes DROP COLUMN poney_max_bookings;
\n  END IF;
\n  \n  IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'passes' AND column_name = 'tir_arc_max_bookings') THEN\n    ALTER TABLE passes DROP COLUMN tir_arc_max_bookings;
\n  END IF;
\nEND $$;
\n\n-- Update time_slots table structure\nDO $$\nBEGIN\n  -- Add event_activity_id column if it doesn't exist\n  IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'time_slots' AND column_name = 'event_activity_id') THEN\n    ALTER TABLE time_slots ADD COLUMN event_activity_id uuid REFERENCES event_activities(id) ON DELETE CASCADE;
\n  END IF;
\n  \n  -- Remove old activity column if it exists\n  IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'time_slots' AND column_name = 'activity') THEN\n    ALTER TABLE time_slots DROP COLUMN activity;
\n  END IF;
\n  \n  -- Remove activity_resource_id column if it exists\n  IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'time_slots' AND column_name = 'activity_resource_id') THEN\n    ALTER TABLE time_slots DROP COLUMN activity_resource_id;
\n  END IF;
\nEND $$;
\n\n-- Create indexes for better performance\nCREATE INDEX IF NOT EXISTS idx_pass_activities_pass_id ON pass_activities(pass_id);
\nCREATE INDEX IF NOT EXISTS idx_pass_activities_event_activity_id ON pass_activities(event_activity_id);
\nCREATE INDEX IF NOT EXISTS idx_time_slots_event_activity_id ON time_slots(event_activity_id);
;
