\n\n-- Vérifier que la colonne has_animations existe dans events\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM information_schema.columns\n    WHERE table_name = 'events' AND column_name = 'has_animations'\n  ) THEN\n    ALTER TABLE events ADD COLUMN has_animations boolean DEFAULT false;
\n  END IF;
\nEND $$;
\n\n-- Vérifier que la table event_animations existe\nCREATE TABLE IF NOT EXISTS event_animations (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  event_id uuid REFERENCES events(id) ON DELETE CASCADE,\n  name text NOT NULL,\n  description text DEFAULT '',\n  location text NOT NULL,\n  start_time timestamptz NOT NULL,\n  end_time timestamptz NOT NULL,\n  capacity integer,\n  is_active boolean DEFAULT true,\n  created_at timestamptz DEFAULT now()\n);
\n\n-- Index pour les performances\nCREATE INDEX IF NOT EXISTS idx_event_animations_event_id ON event_animations(event_id);
\nCREATE INDEX IF NOT EXISTS idx_event_animations_time ON event_animations(start_time, end_time);
\nCREATE INDEX IF NOT EXISTS idx_event_animations_active ON event_animations(is_active) WHERE is_active = true;
\n\n-- Activer RLS\nALTER TABLE event_animations ENABLE ROW LEVEL SECURITY;
\n\n-- Policies pour event_animations\nDROP POLICY IF EXISTS "Admins can manage event animations" ON event_animations;
\nCREATE POLICY "Admins can manage event animations"\n  ON event_animations\n  FOR ALL\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM users\n      WHERE users.id = auth.uid() AND users.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM users\n      WHERE users.id = auth.uid() AND users.role = 'admin'\n    )\n  );
\n\nDROP POLICY IF EXISTS "Anyone can view active animations for published events" ON event_animations;
\nCREATE POLICY "Anyone can view active animations for published events"\n  ON event_animations\n  FOR SELECT\n  TO public\n  USING (\n    is_active = true AND\n    EXISTS (\n      SELECT 1 FROM events\n      WHERE events.id = event_animations.event_id AND events.status = 'published'\n    )\n  );
;
