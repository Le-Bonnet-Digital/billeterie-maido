name: DB Migrations

on:
  push:
    branches: [ main ]
    paths:
      - "supabase/migrations/**"
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: supabase/setup-cli@v1
        with:
          version: latest   # OK

      # Construit une URL IPv4 à partir de ton secret SUPABASE_DB_URL (Session pooler)
      - name: Build IPv4 DB URL
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          set -e
          HOST=$(printf "%s" "$SUPABASE_DB_URL" | sed -E 's#^.*@([^:/?]+):5432.*$#\1#')
          if [ -z "$HOST" ]; then echo "❌ Unable to extract host"; exit 1; fi
          IPV4=$(getent ahostsv4 "$HOST" | awk '{print $1; exit}')
          if [ -z "$IPV4" ]; then echo "❌ No IPv4 found for $HOST"; exit 1; fi
          URL="$SUPABASE_DB_URL"
          if [[ "$URL" == *\?* ]]; then SEP="&"; else SEP="?"; fi
          if [[ "$URL" != *sslmode=* ]]; then URL="${URL}${SEP}sslmode=require"; SEP="&"; fi
          echo "DB_URL_V4=${URL}${SEP}hostaddr=${IPV4}" >> $GITHUB_ENV

      # (Optionnel) aperçu des changements à appliquer
      # Si ta version du CLI supporte --dry-run
      - name: Preview migrations (dry run)
        run: supabase db push --db-url "${DB_URL_V4}" --non-interactive --dry-run || true

      # Appliquer les migrations
      - name: Apply migrations
        run: supabase db push --db-url "${DB_URL_V4}" --non-interactive
